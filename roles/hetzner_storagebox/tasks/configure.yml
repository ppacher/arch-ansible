---
- set_fact: storagebox={{ item }}

- name: Deploy storage box configuration file
  template:
    src: ssh-config.j2
    dest: /root/.ssh/config.d/{{ storagebox }}
    owner: root
    group: root
    mode: 0600
  vars:
    storagebox: "{{ storagebox }}"
  tags:
    - hetzner_storagebox

- name: Create backuo ssh-key folder
  file:
    path: /root/backup
    state: directory
    owner: root
    group: root
    mode: 0600
  tags:
    - hetzner_storagebox
    
- name: Generate SSH key for storage-box
  command: ssh-keygen -t ed25519 -f /root/backup/{{ storagebox }}_ed25519 -N ''
  args:
    creates: /root/backup/{{ storagebox }}_ed25519
  register: sshkeygen
  tags:
    - hetzner_storagebox

- name: mail storage pub-key
  shell: |
    sendmail -t <<ENDMAIL
    To: {{ msmtp.reportTarget }}
    Subject: SSH Key for Storage box {{ storagebox }}
    Content-Transfer-Encoding: 8bit
    Content-Type: text/plain; charset=UTF-8

    $(cat /root/backup/{{ storagebox }}_ed25519.pub)
    ENDMAIL
  when: sshkeygen is changed and msmtp is defined
  tags:
    - hetzner_storagebox

- name: Fetch generated ssh-key
  fetch:
    src: /root/backup/{{ storagebox }}_ed25519.pub
    dest: /tmp/storage-{{ inventory_hostname }}-{{ storagebox }}.pub
    flat: yes
  when: sshkeygen is changed
  tags:
    - hetzner_storagebox

- name: Pause until user configured storage access
  pause:
    prompt: Please configure SSH access using /tmp/storage-{{ inventory_hostname }}-{{ storagebox }}.pub now
  when: sshkeygen is changed
  tags:
    - hetzner-storagebox

- name: Test sftp access to storage box {{ storagebox }}
  shell: sftp -o StrictHostKeyChecking=accept-new {{ storagebox }}.your-storagebox.de <<< $'ls'
  tags:
    - hetzner_storagebox
  
